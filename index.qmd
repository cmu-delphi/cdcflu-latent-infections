---
talk-title: "Estimating latent infections"
talk-short-title: "{{< meta talk-title >}}"
talk-subtitle: "A retrospective"
author: "Ryan J. Tibshirani"
other-authors: "Daniel J. McDonald, Rachel Lobay, and CMU's Delphi Group"
repo-address: "cmu-delphi.github.io/cdcflu-latent-infections"
talk-date: "CDC Flu -- 18 December 2023"
format: revealjs
---

<!-- Set any of the above to "" to omit them -->

<!-- Or adjust the formatting in _titleslide.qmd -->
{{< include _titleslide.qmd >}}


## Goal

#### Use reported cases to estimate actual infections 

* For every US state 
* Between March 1, 2020 to January 1, 2022
* Provide an "authoritative" estimate with uncertainty
* No compartmental models, no sampling or Bayesian methods

## Retrospective deconvolution

* Based on prior work (Jahja et al. 2021)
* Take reported cases and deconvolve them to find when symptoms began
* Private CDC linelist to estimate the delay from symptom onset to case report
  - Different delay distribution for every report date and state
* Combine with Literature estimate of the delay from infection to symptom onset
  - Variant specific
  - Prevailing variant mix taken from GISAID
* Convolve both to get delay distribution from infection to case report

## Empirical delay distributions

need this data.


## Variant mix

Need this data.


## Incubation period by state

```{r incubation-distn}
dates <- seq(as.Date("2020-03-01"), as.Date("2022-03-01"), by = "3 months")
incubation <- read_rds("data/incubation_ca_ga.rds")
incubation |>
  filter(Date %in% dates) |>
  ggplot(aes(x = delay, y = dist, color = factor(Date))) +
  geom_line() +
  facet_wrap(~state) +
  theme_bw(base_size = 14) +
  ylab("Probability") +
  xlab("Days from infection to symptom onset") +
  scale_color_viridis_d(name = "") +
  scale_y_continuous(expand = expansion(c(0, .05))) +
  scale_x_continuous(expand = expansion(c(0, .05)))
```

## Convolved distribution -- Infection to case report

```{r convolved-distn}
convolved <- read_rds("data/convolved_ca_ga.rds")
convolved |>
  filter(Date %in% dates) |>
  ggplot(aes(x = delay, y = dist, color = factor(Date))) +
  geom_line() +
  facet_wrap(~state) +
  theme_bw(base_size = 14) +
  ylab("Probability") +
  xlab("Days from infection to case report") +
  scale_color_viridis_d(name = "") +
  scale_y_continuous(expand = expansion(c(0, .05))) +
  scale_x_continuous(expand = expansion(c(0, .05)))
```

## Cases are selectively reported to CDC

* CDC linelist with both onset and report date
* Shrink the parameters to national proportionally

![](gfx/proportion_cdc_vs_jhu.png)

## Some deconvolution math

## Deconvolve cases by their delay distribution

```{r deconvolved-cases}
deconvolved <- read_rds("data/deconvolved_ca_ga.rds")
deconvolved |>
  rename(`Deconvolved cases` = infections, Cases = cases) |>
  pivot_longer(`Deconvolved cases`:Cases) |>
  ggplot(aes(time_value, value / 1000, color = name)) +
  geom_line() +
  theme_bw(base_size = 14) +
  facet_wrap(~ geo_value, ncol = 1, scales = "free_y") +
  scale_color_manual(name = "", values = c(primary, tertiary)) +
  xlab("Date") + ylab("Cases / Deconvolved cases \n(thousands)") +
  scale_y_continuous(expand = expansion(c(0, .05))) +
  theme(
    legend.position = c(.2, .9), 
    legend.title = element_blank(),
    legend.background = element_rect(fill = "transparent"),
    legend.key = element_rect(fill = "transparent"),
  )
```

## Estimate the inverse reporting ratio

## Serology data

## State space model

## Results


## Callouts

::: {.callout-note}
You can use these. See <https://quarto.org/docs/authoring/callouts.html>
:::

## Final slide {.smaller}


### Thanks:

```{r qr-codes}
#| include: false
#| fig-format: png
# Code to generate QR codes to link to any external sources
qrdat <- function(text, ecl = c("L", "M", "Q", "H")) {
  x <- qrcode::qr_code(text, ecl)
  n <- nrow(x)
  s <- seq_len(n)
  tib <- tidyr::expand_grid(x = s, y = rev(s))
  tib$z <- c(x)
  tib
}
qr1 <- qrdat("https://cmu-delphi.github.io/epiprocess/")
qr2 <- qrdat("https://cmu-delphi.github.io/epipredict/")
ggplot(qr1, aes(x, y, fill = z)) +
  geom_raster() +
  ggtitle("{epiprocess}") +
  coord_equal(expand = FALSE) +
  scale_fill_manual(values = c("white", "black"), guide = "none") +
  theme_void(base_size = 18) +
  theme(plot.title = element_text(hjust = .5))
ggplot(qr2, aes(x, y, fill = z)) +
  geom_raster() +
  labs(title = "{epipredict}") +
  coord_equal(expand = FALSE) +
  scale_fill_manual(values = c("white", "black"), guide = "none") +
  theme_void(base_size = 18) +
  theme(plot.title = element_text(hjust = .5))
```

::: flex
::: w-50
- The whole [CMU Delphi Team](https://delphi.cmu.edu/about/team/) (across many institutions)
- Optum/UnitedHealthcare, Change Healthcare.
- Google, Facebook, Amazon Web Services.
- Quidel, SafeGraph, Qualtrics.
- Centers for Disease Control and Prevention.
- Council of State and Territorial Epidemiologists
:::

::: w-50

![](gfx/qr-epiprocess.png){width="300px"}
![](gfx/qr-epipredict.png){width="300px"}

:::

:::

::: {layout-row=1 fig-align="center"}
![](gfx/delphi.jpg){height="100px"}
![](gfx/berkeley.jpg){height="100px"}
![](gfx/cmu.jpg){height="100px"}
![](gfx/ubc.jpg){width="250px"}
![](gfx/usc.jpg){width="250px"}
![](gfx/stanford.jpg){width="250px"}
:::


